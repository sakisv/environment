set t_Co=256
set pastetoggle=<F2>
set encoding=utf-8
set mouse=a

" apply vimrc changes upon save
autocmd! bufwritepost .vimrc source ~/.vimrc

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

" show evil trailing whitespace
set list listchars=trail:~
" remove it on :w
autocmd BufWritePre *.* :%s/\s\+$//e

" This beauty remembers where you were the last time you edited the file, and returns to the same position.
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" Allows the creation of directories from within nerdtree
set modifiable

" Highlight the matching bracket
set showmatch

" Matching brackets will be brown (red+green) and underlined
:hi MatchParen cterm=underline ctermbg=green ctermfg=red

" Show the line numbers
set number

" Disable highlighting spelling mistakes (http://stackoverflow.com/a/10963639/1477072)
set nospell

" Set use F6 to toggle spellcheck
:map <F6> :setlocal spell! spelllang=en_us<CR>

" Syntax highlight
syntax on
" More syntax highlighting.
let python_highlight_all = 1

" Highlight current line
set cursorline

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Backspace over insert, line breaks and autoindent
set backspace=indent,eol,start

""""""""""""""""""""""""""""""""""""""""""""""
" Search stuff
""""""""""""""""""""""""""""""""""""""""""""""
set incsearch
set hlsearch
set ignorecase
set smartcase

 " Stupid shift key fixes
if has("user_commands")
    " command! -bang -nargs=* -complete=file E e<bang> <args>
    command! -bang -nargs=* -complete=file W w<bang> <args>
    " command! -bang -nargs=* -complete=file Wq wq<bang> <args>
    " command! -bang -nargs=* -complete=file WQ wq<bang> <args>
    " command! -bang Wa wa<bang>
    " command! -bang WA wa<bang>
    " command! -bang Q q<bang>
    " command! -bang QA qa<bang>
    " command! -bang Qa qa<bang>
endif

""""""""""""""""""""""""""""""""""""""""""""""
" Indentation stuff
""""""""""""""""""""""""""""""""""""""""""""""

" Set the default to be 4 for everything
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
set autoindent
filetype plugin indent on

" And then specify per filetype:
autocmd Filetype yaml setlocal ts=2 sts=2 sw=2
autocmd Filetype html setlocal ts=2 sts=2 sw=2
autocmd Filetype htmldjango setlocal ts=2 sts=2 sw=2
autocmd Filetype javascript setlocal ts=4 sts=4 sw=4
autocmd Filetype python setlocal ts=4 sts=4 sw=4 cc=120,79
autocmd Filetype c setlocal ts=8 sts=8 sw=8

" indent guides stuff
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1

set laststatus=2

" start scrolling 15 lines before the edge
set scrolloff=25

" when we jump to the end of the page, center the cursor
nnoremap G Gzz

" toggle highlighting search results
nnoremap <F3> :set hlsearch!<CR>

" \l toggles line numbers
:nmap \l :setlocal number!<CR>
" \m sets mouse to all
:nmap \m :set mouse=a<CR>
" \mm sets mouse to visual
:nmap \mm :set mouse=v<CR>

" shortcut for opening in new tab
:nmap :et :tab sp

" insert python breakpoint
:imap <F12> import ipdb; ipdb.set_trace()
:nmap <F12> oimport ipdb; ipdb.set_trace()<Esc>

" instead of hitting Esc just press jj while on insert mode
:inoremap jj <Esc>

" bind ctrl+movement (h,j,k,l) to move between splits
map <c-h> <c-w>h
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l

" Treat long lines as break lines (useful when moving around in them)
" (https://amix.dk/vim/vimrc.html)
map j gj
map k gk

" Deletes contents of the file
nmap :da<CR> ggVGd

""""""""""""""""""""""""""""""""""""""""""""""
" Folding
""""""""""""""""""""""""""""""""""""""""""""""
" set foldmethod=indent
" set foldnestmax=2
" nnoremap <space> za

" unfold everything when opening files
" autocmd Syntax * normal zR

let mapleader=","

" Set the colorscheme
colorscheme molokai
let g:Powerline_colorscheme='mar'


""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""
" Vundle stuff
""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible
filetype off

" set the RunTimePath for vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

""""""""""""""""""""""""""""""""""""""""""""""
" Plugins list
""""""""""""""""""""""""""""""""""""""""""""""
Plugin 'airblade/vim-gitgutter'
Plugin 'amirh/HTML-AutoCloseTag'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'easymotion/vim-easymotion'
Plugin 'majutsushi/tagbar'
Plugin 'mileszs/ack.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'sjl/gundo.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()
filetype plugin indent on


""""""""""""""""""""""""""""""""""""""""""""""
" NERTree config
""""""""""""""""""""""""""""""""""""""""""""""

" Toggle NERDTree
:map <F4> :NERDTreeToggle<CR>

" Ignore certain filetypes
let NERDTreeIgnore = ['\.pyc$']

""""""""""""""""""""""""""""""""""""""""""""""
" Flake8 config
""""""""""""""""""""""""""""""""""""""""""""""

let g:syntastic_python_flake8_args='--ignore=E501'
let g:syntastic_html_checkers=[]

""""""""""""""""""""""""""""""""""""""""""""""
" ctrlp config
""""""""""""""""""""""""""""""""""""""""""""""

" Open in mixed tab
let g:ctrlp_cmd = 'CtrlPMixed'

" Make enter (<cr>) open in new tab
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>'],
    \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
    \ }

" Honor .gitignore
" https://github.com/kien/ctrlp.vim/issues/174#issuecomment-49747252
" let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
nnoremap <Leader>p :CtrlPTag<cr>

""""""""""""""""""""""""""""""""""""""""""""""
" Gundo config
""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <F5> :GundoToggle<CR>

" Tagbar config
nnoremap <F7> :TagbarToggle<CR>

set exrc
set secure
